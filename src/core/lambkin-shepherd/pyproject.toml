[tool.poetry]
name = "lambkin-shepherd"
version = "0.1.0"
description = "Localization and Mapping Benchmarking Toolkit"
license = "Apache-2.0"
authors = [
    "Leonardo Neumarkt <leonardoneumarkt@ekumenlabs.com>",
    "Michel Hidalgo <michel@ekumenlabs.com>",
    "Nahuel Espinosa <nespinosa@ekumenlabs.com>"
]
maintainers = ["Michel Hidalgo <michel@ekumenlabs.com>"]
readme = "README.md"
packages = [{ include = "lambkin", from = "src" }]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: Robot Framework :: Library",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python",
    "Programming Language :: Other",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering"
]

[tool.poetry.dependencies]
python = "<3.12,>=3.8.2"
numpy = "^1.24.2"
pandas = "^2.0.0"
robotframework = "^6.0.2"
Pint = "^0.20.0"
PyYAML = "^6.0"

evo = { version = "^1.21.0", optional = true }
Pillow = { version = "^9.4.0" , optional = true }
scipy = { version = "^1.10.1", optional = true }

# NOTE(hidmic): mplot3d is broken in matplotlib 3.8.0
# See https://github.com/matplotlib/matplotlib/issues/26827
matplotlib = { version = "~3.7.0", optional = true }
seaborn = { version = "^0.12.2", optional = true }
sphinx = { version = "^6.1.3", optional = true }

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.1"
mypy = "^1.1.1"
types-Pillow = "^9.4.0"
types-PyYAML = "^6.0"
types-docutils = "^0.19.1.9"
flake8 = "^6.0.0"
flake8-docstrings = "^1.7.0"
robotframework-robocop = "^3.0.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "*"
sphinx-rtd-theme = "*"

[tool.poetry.extras]
processing = ["evo", "Pillow", "scipy"]
visualization = ["evo", "matplotlib", "seaborn"]
reporting = ["matplotlib", "seaborn", "Sphinx"]
full = ["evo", "Pillow", "matplotlib", "seaborn", "scipy", "Sphinx"]

[tool.poetry.scripts]
shepherd = "lambkin.shepherd.cli:main"

[tool.mypy]
ignore_missing_imports = true

[tool.robocop]
exclude = [
    "ignored-data",
    "wrong-case-in-keyword-name",
    "underscore-in-keyword-name"
]
configure = [
    "too-many-calls-in-keyword:max_calls:20",
    "too-many-calls-in-test-case:max_calls:20",
    "too-long-keyword:max_len:100"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
